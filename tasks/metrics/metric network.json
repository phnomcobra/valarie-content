{
    "d282b0e3-2b5e-da11-738a-0d66380428b7": {
        "accepts": [], 
        "body": "#!/usr/bin/python\n\nimport traceback\nimport json\n\nfrom time import time\n\nfrom valarie.dao.document import Collection\nfrom valarie.model.kvstore import get as get_kv, \\\n                                  set as set_kv\n\nclass Task:\n    def __init__(self):\n        self.output = []\n        self.status = STATUS_NOT_EXECUTED\n\n    def network(self, cli):\n        try:\n            netstats = get_kv(\"netstats\")\n            \n            tx0 = netstats[\"tx\"]\n            rx0 = netstats[\"rx\"]\n            \n            time0 = netstats[\"timestamp\"]\n            \n            for i in range(len(tx0)):\n                int(tx0[i]) + int(rx0[i])\n        except:\n            tx0 = []\n            rx0 = []\n            time0 = 0.0\n        \n        status, stdout, stderr = cli.system(\"ifconfig\", return_tuple = True)\n        \n        assert status == 0, stdout + stderr\n        \n        rx1 = []\n        tx1 = []\n        time1 = time()\n                        \n        for line in stdout.split(\"\\n\"):\n            substrs = [x for x in line.split(\" \") if x]\n                            \n            if \"RX\" in substrs and \"bytes\" in substrs:\n                rx1.append(int(substrs[4]))\n        \n            if \"TX\" in substrs and \"bytes\" in substrs:\n                tx1.append(int(substrs[4]))\n        \n        try:\n            rx_sum = 0\n            tx_sum = 0\n            \n            for i in range(len(rx0)):\n                rx_sum = rx_sum + rx1[i] - rx0[i]\n                tx_sum = tx_sum + tx1[i] - tx0[i]\n            \n            netstats = {\n                \"tx\" : tx1,\n                \"rx\" : rx1,\n                \"timestamp\" : time1,\n                \"rx_rate\" : rx_sum / (time1 - time0),\n                \"tx_rate\" : tx_sum / (time1 - time0)\n            }\n            \n            metric = Collection(\"metrics\").get_object()\n        \n            metric.object[\"timestamp\"] = time1\n            metric.object[\"tx_rate\"] = tx_sum / (time1 - time0)\n            metric.object[\"rx_rate\"] = rx_sum / (time1 - time0)\n            metric.object[\"type\"] = \"localhost network throughput\"\n                \n            metric.set()\n        except Exception as e:\n            netstats = {\n                \"tx\" : tx1,\n                \"rx\" : rx1,\n                \"timestamp\" : time1,\n                \"error\" : str(e)\n            }\n        \n        set_kv(\"netstats\", netstats)\n        \n        self.output.append(json.dumps(metric.object, indent = 4))\n    \n    def execute(self, cli):\n        try:\n            self.network(cli)\n            self.status = STATUS_SUCCESS\n        except:\n            self.output.append(traceback.format_exc())\n            self.status = STATUS_FAILURE\n\n        return self.status", 
        "changed": false, 
        "children": [], 
        "coluuid": "b39c6734-5409-8aed-e945-72e783dc42ec", 
        "context": {
            "copy": {
                "action": {
                    "method": "copy node", 
                    "params": {
                        "objuuid": "d282b0e3-2b5e-da11-738a-0d66380428b7"
                    }, 
                    "route": "inventory/ajax_copy_object"
                }, 
                "label": "Copy"
            }, 
            "delete": {
                "action": {
                    "method": "delete node", 
                    "params": {
                        "objuuid": "d282b0e3-2b5e-da11-738a-0d66380428b7"
                    }, 
                    "route": "inventory/ajax_delete"
                }, 
                "label": "Delete"
            }, 
            "edit": {
                "action": {
                    "method": "edit task", 
                    "params": {
                        "objuuid": "d282b0e3-2b5e-da11-738a-0d66380428b7"
                    }, 
                    "route": "inventory/ajax_get_object"
                }, 
                "label": "Edit"
            }, 
            "edit hosts": {
                "action": {
                    "method": "edit task hosts", 
                    "params": {
                        "objuuid": "d282b0e3-2b5e-da11-738a-0d66380428b7"
                    }, 
                    "route": "inventory/ajax_get_object"
                }, 
                "label": "Edit Hosts"
            }, 
            "run": {
                "action": {
                    "method": "run task", 
                    "params": {
                        "objuuid": "d282b0e3-2b5e-da11-738a-0d66380428b7"
                    }, 
                    "route": "inventory/ajax_get_object"
                }, 
                "label": "Run"
            }
        }, 
        "hosts": [], 
        "icon": "/images/task_icon.png", 
        "name": "metric network", 
        "objuuid": "d282b0e3-2b5e-da11-738a-0d66380428b7", 
        "parent": "b5440c18-593b-ec1c-a34c-e640ca529d59", 
        "type": "task"
    }
}