#!/usr/bin/python
################################################################################
# KVSTORE COMMAND LINE INTERFACE
#
# Justin Dierking
# justin.l.dierking.civ@mail.mil
# (614) 692 2050
#
# 05/20/2018 Original construction
################################################################################

import argparse
import json

from stembot import kvstore

parser = argparse.ArgumentParser(description = 'key/value store interface')

subparsers = parser.add_subparsers(help = 'commands')

set_kv_parser = subparsers.add_parser('set', help = 'set key value pair')
set_kv_parser.add_argument('--type', dest = 'key_type', choices = ('int', 'float', 'str', 'dict', 'list'), help = 'key type')
set_kv_parser.add_argument('set_key_name', action = 'store', help = 'key name')
set_kv_parser.add_argument('set_key_value', action = 'store', help = 'key value')

get_kv_parser = subparsers.add_parser('get', help = 'get key value pair')
get_kv_parser.add_argument('get_key_name', action = 'store', help = 'key name')

del_kv_parser = subparsers.add_parser('del', help = 'delete key value pair')
del_kv_parser.add_argument('del_key_name', action = 'store', help = 'key name')

list_kv_parser = subparsers.add_parser('list', help = 'list key value pairs')
list_kv_parser.add_argument('--all', dest = 'list_key_pairs', action = 'store_true')

kargs = vars(parser.parse_args())

def coerce(value):
    try:
        return int(value)
    except:
        pass
    
    try:
        return float(value)
    except:
        pass
    
    return str(value)

if 'list_key_pairs' in kargs:
    print json.dumps(kvstore.get_all(), indent = 4)
elif 'set_key_name' in kargs:
    if kargs['key_type'] == 'int':
        kvstore.set(kargs['set_key_name'], int(kargs['set_key_value']))
    elif kargs['key_type'] == 'float':
        kvstore.set(kargs['set_key_name'], float(kargs['set_key_value']))
    elif kargs['key_type'] == 'str':
        kvstore.set(kargs['set_key_name'], str(kargs['set_key_value']))
    elif kargs['key_type'] == 'dict':
        kvstore.set(kargs['set_key_name'], dict(eval(kargs['set_key_value'])))
    elif kargs['key_type'] == 'list':
        kvstore.set(kargs['set_key_name'], list(eval(kargs['set_key_value'])))
    else:
        kvstore.set(kargs['set_key_name'], coerce(kargs['set_key_value']))
        
    print json.dumps({kargs['set_key_name'] : kvstore.get(kargs['set_key_name'])}, indent = 4)
elif 'get_key_name' in kargs:
    print json.dumps(kvstore.get(kargs['get_key_name']), indent = 4)
elif 'del_key_name' in kargs:
    kvstore.delete(kargs['del_key_name'])
    print "Deleted " + kargs['del_key_name']